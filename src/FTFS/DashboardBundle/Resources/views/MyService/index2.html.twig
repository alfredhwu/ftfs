{% extends "FTFSDashboardBundle::layout.html.twig" %}

{% block body_content %}
{% include 'FTFSDashboardBundle:MyService:crud_box.html.twig' %}
{% endblock %}

{% block javascript %}
{{ parent() }}
<script>
    $(document).ready(function () {
        var href = "{{ path('ftfs_dashboardbundle_myservice_index') }}";

        // filter: type 
        var type = {{ app.request.query.get('type') | default(0) }};
        $('select#ticket-filter-type').val(type);
        $('select#ticket-filter-type').change(function() {
            var loc = document.location;
            var search = loc.search;
            if(!search.match(/type=[a-zA-Z0-9_]*/)) {
                search += ("" == search) ? '?' : "&";
                search += 'type=type';
            }
            search = search.replace(/type=[a-zA-Z0-9_]*/, 'type='+$(this).val());
            //alert(href + search);
            window.location.replace(href+search);
            /*
            $.post(href+search, function(data) { 
                $('div#crud-box-content').html(data);
            });
            */
        });
        // filter: from, to

        // filter: action/download
        $('a#ticket-filter-action').click(function(e) {
            e.preventDefault();
            var href = $(this).attr('data-source');
            var type = $('select#ticket-filter-type').val();
            var from = $('select#ticket-filter-from').val();
            var to = $('select#ticket-filter-to').val();
            var status = '';
            href = href.replace(/_type/, type);
            href = href.replace(/_from/, from);
            href = href.replace(/_to/, to);
            href = href.replace(/_status/, status);
            window.location.replace(href);
        });

        // pagination actions 
        $('div.pagination ul li a').click(function(e) { 
            e.preventDefault();
        });
    });

    // general help func
    function parseSearchToQueries(search) {
        if(typeof(search) === 'undefined') {
            // default, current search string
            search = document.location.search.substr(1);
        }else if(search.substr(0,1)==='?' && search.split('?').length===2) {
            search = search.substr(1);
        }else{
            search = '';
        }

        var queries = {};
        var pairs = search.split('&');
        for(i=0;i<pairs.length;i++) {
            var pair = pairs[i].split('=');
            if(pair.length = 2) {
                queries[pair[0]] = pair[1];
            }
        }
        return queries;
    }

    function getQuery(key, search) {
        var queries = parseSearchToQueries(search);
        return queries[key];
    }

    function setQuery(key, value, search) {
        if(getQuery(key,search)=='undefined') {
            // not exist
        }else{
        }
    }
</script>
{% endblock %}
